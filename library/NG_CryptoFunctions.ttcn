/* Utility crypto functions for NG NAS (5G)
 *
 * (C) 2025 by sysmocom - s.f.m.c. GmbH <info@sysmocom.de>
 * Author: Pau Espin Pedrol <pespin@sysmocom.de
 * All rights reserved.
 *
 * Released under the terms of GNU General Public License, Version 2 or
 * (at your option) any later version.
 *
 * SPDX-License-Identifier: GPL-2.0-or-later
 */

module NG_CryptoFunctions {

import from General_Types all;
import from Misc_Helpers all;

import from NAS_CommonTypeDefs all;

/*********************************************************************************
 * low-level API (external C/C++ code)
 *********************************************************************************/

/* 3GPP TS 33.102 Figure 9, 3GPP TS 35.206 Annex 3 */
external function f_kdf_xres_star(octetstring ssn, OCT16 ck, OCT16 ik, OCT16 rand,
				  octetstring xres) return OCT16;

/*********************************************************************************
 * mid-level API
 *********************************************************************************/

function f_NG_NAS_SNN_MNC(NAS_PlmnId plmn_id) return charstring
{
	var charstring mnc := "";
	var hexstring plmn_hex := oct2hex(plmn_id);

	if (plmn_hex[2] == 'F'H) {
		mnc := "0";
	}
	mnc := mnc & hex2str(plmn_hex[5]) & hex2str(plmn_hex[4]);
	if (plmn_hex[2] != 'F'H) {
		/* add last digit if not F */
		mnc := mnc & hex2str(plmn_hex[2]);
	}
	return mnc;
}

function f_NG_NAS_SNN_MCC(NAS_PlmnId plmn_id) return charstring
{
	var charstring mcc;
	var hexstring plmn_hex := oct2hex(plmn_id);

	mcc := hex2str(plmn_hex[1]) &
		       hex2str(plmn_hex[0]) &
		       hex2str(plmn_hex[3]);

	return mcc;
}

function f_NG_NAS_ServingNetworkName(NAS_PlmnId plmn_id, template (omit) hexstring NID := omit) return charstring
{
	var charstring ssn := "5G:mnc" & f_NG_NAS_SNN_MNC(plmn_id) &
			      ".mcc" & f_NG_NAS_SNN_MCC(plmn_id) &
			      ".3gppnetwork.org";

	if (isvalue(NID)) {
		ssn := ssn & ":" & hex2str (valueof(NID));
	}

	return ssn;
}

function f_NG_NAS_ServingNetworkName_OCT(NAS_PlmnId plmn_id, template (omit) hexstring NID := omit) return octetstring
{
	return char2oct(f_NG_NAS_ServingNetworkName(plmn_id, NID));
}

}

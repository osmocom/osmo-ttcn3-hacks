module NGAP_Functions {

/* (C) 2019 by Harald Welte <laforge@gnumonks.org>
 * (C) 2025 by sysmocom - s.f.m.c. GmbH <info@sysmocom.de>
 * All rights reserved.
 *
 * Released under the terms of GNU General Public License, Version 2 or
 * (at your option) any later version.
 *
 * SPDX-License-Identifier: GPL-2.0-or-later
 */

import from NGAP_IEs all;
import from NGAP_Types all;
import from NGAP_Constants all;
import from NGAP_PDU_Contents all;
import from NGAP_PDU_Descriptions all;
import from NGAP_Templates all;

function f_NGAP_get_AMF_UE_NGAP_ID(NGAP_PDU ngap) return template (omit) AMF_UE_NGAP_ID
{
	if (ischosen(ngap.initiatingMessage)) {
		var InitiatingMessage im := ngap.initiatingMessage;
		select (ngap) {
		case (?) {
			return omit;
			/* TODO */
			/* return im.value_.InitialUEMessage.protocolIEs[0].value_.AMF_UE_NGAP_ID; */
			}
		/* TODO */
		}
	} else if (ischosen(ngap.successfulOutcome)) {
		var SuccessfulOutcome so := ngap.successfulOutcome;
		select (ngap) {
		case (?) {
			return omit;
			/* TODO */
			/* return im.value_.SuccessfulOutcome.protocolIEs[0].value_.AMF_UE_NGAP_ID; */
			}
		/* TODO */
		}
	} else if (ischosen(ngap.unsuccessfulOutcome)) {
		var UnsuccessfulOutcome uo := ngap.unsuccessfulOutcome;
		select (ngap) {
		case (?) {
			return omit;
			/* TODO */
			/* return im.value_.UnsuccessfulOutcome.protocolIEs[0].value_.AMF_UE_NGAP_ID; */
			}
		/* TODO */
		}
	}
	return omit;
}

function f_NGAP_get_RAN_UE_NGAP_ID(NGAP_PDU ngap) return template (omit) RAN_UE_NGAP_ID
{
	if (ischosen(ngap.initiatingMessage)) {
		var InitiatingMessage im := ngap.initiatingMessage;
		select (ngap) {
		case (?) {
			return omit;
			/* TODO */
			/* return im.value_.InitialUEMessage.protocolIEs[0].value_.RAN_UE_NGAP_ID; */
			}
		/* TODO */
		}
	} else if (ischosen(ngap.successfulOutcome)) {
		var SuccessfulOutcome so := ngap.successfulOutcome;
		select (ngap) {
		case (?) {
			return omit;
			/* TODO */
			/* return im.value_.SuccessfulOutcome.protocolIEs[0].value_.RAN_UE_NGAP_ID; */
			}
		/* TODO */
		}
	} else if (ischosen(ngap.unsuccessfulOutcome)) {
		var UnsuccessfulOutcome uo := ngap.unsuccessfulOutcome;
		select (ngap) {
		case (?) {
			return omit;
			/* TODO */
			/* return im.value_.UnsuccessfulOutcome.protocolIEs[0].value_.RAN_UE_NGAP_ID; */
			}
		/* TODO */
		}
	}
	return omit;
}

}
